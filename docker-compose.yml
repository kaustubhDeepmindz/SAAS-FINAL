services:
  auth-services:
    build:
      context: .
      dockerfile: ./apps/auth-services/Dockerfile
      target: development
    command: npm run start:dev auth-services
    env_file:
      - ./apps/auth-services/.env
    # depends_on:
    #   # - mongodb-primary
    #   # - mongodb-secondary
    #   # - mongodb-arbiter
    #   - billing
    #   # - auth
    #   # - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '5000:3000'

  billing-services:
    build:
      context: .
      dockerfile: ./apps/billing-services/Dockerfile
      target: development
    command: npm run start:dev billing-services
    env_file:
      - ./apps/billing-services/.env
    # depends_on:
    #   - mongodb-primary
    #   - mongodb-secondary
    #   - mongodb-arbiter
    #   - rabbitmq
    #   - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  manager-services:
    build:
      context: .
      dockerfile: ./apps/manager-services/Dockerfile
      target: development
    command: npm run start:dev manager-services
    ports:
      - '3001:3001'
    env_file:
      - ./apps/manager-services/.env
    # depends_on:
    #   - mongodb-primary
    #   - mongodb-secondary
    #   - mongodb-arbiter
    #   - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  payment-services:
    build:
      context: .
      dockerfile: ./apps/payment-services/Dockerfile
      target: development
    command: npm run start:dev payment-services
    env_file:
      - ./apps/payment-services/.env
    # depends_on:
    #   # - mongodb-primary
    #   # - mongodb-secondary
    #   # - mongodb-arbiter
    #   - billing
    #   # - auth
    #   # - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '5000:3000'

 
 
 
 
#   rabbitmq:
#     image: rabbitmq
#     ports:
#       - '5672:5672'
 
 
 
#   mongodb-primary:
#     image: docker.io/bitnami/mongodb:5.0
#     environment:
#       - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
#       - MONGODB_REPLICA_SET_MODE=primary
#       - MONGODB_ROOT_PASSWORD=password123
#       - MONGODB_REPLICA_SET_KEY=replicasetkey123
#     volumes:
#       - 'mongodb_master_data:/bitnami/mongodb'
#     ports:
#       - '27017:27017'

#   mongodb-secondary:
#     image: docker.io/bitnami/mongodb:5.0
#     depends_on:
#       - mongodb-primary
#     environment:
#       - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
#       - MONGODB_REPLICA_SET_MODE=secondary
#       - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
#       - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
#       - MONGODB_REPLICA_SET_KEY=replicasetkey123

#   mongodb-arbiter:
#     image: docker.io/bitnami/mongodb:5.0
#     depends_on:
#       - mongodb-primary
#     environment:
#       - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
#       - MONGODB_REPLICA_SET_MODE=arbiter
#       - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
#       - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
#       - MONGODB_REPLICA_SET_KEY=replicasetkey123

# volumes:
#   mongodb_master_data:
#     driver: local
